<?php

namespace Epaphrodites\database\requests\typeRequest\sqlRequest\insert\AutoMigrations\migrations;

trait oracleMigrations
{

    /**
     * Create user if not exist
     * @return void
     */
    private function CreateOracleLUserIfNotExist(): void
    {
        $queries = [
            'BEGIN EXECUTE IMMEDIATE \'CREATE TABLE usersaccount ( 
                "_id" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
                login VARCHAR2(20) NOT NULL,
                password VARCHAR2(100) NOT NULL,
                namesurname VARCHAR2(150) NULL,
                contact VARCHAR2(10) NULL,
                email VARCHAR2(50) NULL,
                usersgroup NUMBER DEFAULT 1 NOT NULL,
                otp NUMBER DEFAULT 0 NOT NULL,
                state NUMBER DEFAULT 1 NOT NULL)\';
            EXCEPTION
                WHEN OTHERS THEN
                    IF SQLCODE = -955 THEN
                        NULL;
                    ELSE
                        RAISE;
                    END IF; 
            END;',
            "CREATE INDEX login_index ON usersaccount (login)"
        ];
    
        $this->multiChaine($queries)->setMultiQuery();
    }
    
    /**
     * Create history if not exist
     * @return void
     */
    private function createHistoryOracleLIfNotExist(): void
    {
        $this->multiChaine([
            'BEGIN EXECUTE IMMEDIATE \'CREATE TABLE history (
                "_id" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
                actions VARCHAR2(20) NOT NULL,
                dates TIMESTAMP,
                label VARCHAR2(300) NOT NULL)\';
            EXCEPTION
                WHEN OTHERS THEN
                    IF SQLCODE = -955 THEN
                        NULL;
                    ELSE
                        RAISE;
                    END IF;
            END;',

            "CREATE INDEX actions_index ON history (actions)"
            ]
        )->setMultiQuery();
    }
    
    /**
     * Create secure if not exist
     * @return void
     */
    private function CreateAuthSecureOracleLIfNotExist(): void
    {
        $this->multiChaine([
            'BEGIN EXECUTE IMMEDIATE \'CREATE TABLE secure (
                    "_id" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
                    auth VARCHAR2(300) NOT NULL,
                    token VARCHAR2(200) NOT NULL,
                    createat TIMESTAMP)\';
            EXCEPTION
                WHEN OTHERS THEN
                    IF SQLCODE = -955 THEN
                        NULL;
                    ELSE
                        RAISE;
                    END IF;
            END;',

            "CREATE INDEX auth_index ON secure (auth)"
            ]
        )->setMultiQuery();
    }
}